{"ast":null,"code":"var _jsxFileName = \"/Users/aungmyat/Foodfolio/FoodFolio/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [tasks, setTasks] = useState(() => JSON.parse(localStorage.getItem(\"tasks\")) || {});\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Update localStorage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const addTask = () => {\n    if (newTask.trim() === \"\") return;\n    const dateKey = selectedDate.toISOString().split(\"T\")[0]; // Format: YYYY-MM-DD\n    const dateTasks = tasks[dateKey] || []; // Get tasks for the selected date\n    const updatedTasks = {\n      ...tasks,\n      [dateKey]: [...dateTasks, {\n        text: newTask,\n        completed: false\n      }]\n    };\n    setTasks(updatedTasks);\n    setNewTask(\"\");\n  };\n  const toggleTaskCompletion = taskIndex => {\n    const dateKey = selectedDate.toISOString().split(\"T\")[0];\n    const dateTasks = tasks[dateKey] || [];\n    const updatedTasks = dateTasks.map((task, index) => index === taskIndex ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks({\n      ...tasks,\n      [dateKey]: updatedTasks\n    });\n  };\n  const deleteTask = taskIndex => {\n    const dateKey = selectedDate.toISOString().split(\"T\")[0];\n    const dateTasks = tasks[dateKey] || [];\n    const updatedTasks = dateTasks.filter((_, index) => index !== taskIndex);\n    setTasks({\n      ...tasks,\n      [dateKey]: updatedTasks\n    });\n  };\n  const dateKey = selectedDate.toISOString().split(\"T\")[0];\n  const dateTasks = tasks[dateKey] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Your Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage tasks for specific dates using the calendar and to-do list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-left\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dashboard-section calendar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: handleDateChange,\n            value: selectedDate,\n            className: \"dashboard-calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedDate.toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-right\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dashboard-section tasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Tasks for \", selectedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a new task...\",\n              value: newTask,\n              onChange: e => setNewTask(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addTask,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"task-list\",\n            children: [dateTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: task.completed ? \"completed\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => toggleTaskCompletion(index),\n                children: task.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-task\",\n                onClick: () => deleteTask(index),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)), dateTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks for this date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"dashboard-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Foodfolio. All rights reserved. Created by Aung Myat & Shreya Sharma.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"6EjdVQoxDmlFwhLrBFZtL7VfICM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","Dashboard","_s","selectedDate","setSelectedDate","Date","tasks","setTasks","JSON","parse","localStorage","getItem","newTask","setNewTask","setItem","stringify","handleDateChange","date","addTask","trim","dateKey","toISOString","split","dateTasks","updatedTasks","text","completed","toggleTaskCompletion","taskIndex","map","task","index","deleteTask","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","toDateString","type","placeholder","e","target","onClick","length","_c","$RefreshReg$"],"sources":["/Users/aungmyat/Foodfolio/FoodFolio/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./Dashboard.css\";\n\nfunction Dashboard() {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [tasks, setTasks] = useState(() => JSON.parse(localStorage.getItem(\"tasks\")) || {});\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Update localStorage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const addTask = () => {\n    if (newTask.trim() === \"\") return;\n\n    const dateKey = selectedDate.toISOString().split(\"T\")[0]; // Format: YYYY-MM-DD\n    const dateTasks = tasks[dateKey] || []; // Get tasks for the selected date\n    const updatedTasks = { ...tasks, [dateKey]: [...dateTasks, { text: newTask, completed: false }] };\n\n    setTasks(updatedTasks);\n    setNewTask(\"\");\n  };\n\n  const toggleTaskCompletion = (taskIndex) => {\n    const dateKey = selectedDate.toISOString().split(\"T\")[0];\n    const dateTasks = tasks[dateKey] || [];\n    const updatedTasks = dateTasks.map((task, index) =>\n      index === taskIndex ? { ...task, completed: !task.completed } : task\n    );\n\n    setTasks({ ...tasks, [dateKey]: updatedTasks });\n  };\n\n  const deleteTask = (taskIndex) => {\n    const dateKey = selectedDate.toISOString().split(\"T\")[0];\n    const dateTasks = tasks[dateKey] || [];\n    const updatedTasks = dateTasks.filter((_, index) => index !== taskIndex);\n\n    setTasks({ ...tasks, [dateKey]: updatedTasks });\n  };\n\n  const dateKey = selectedDate.toISOString().split(\"T\")[0];\n  const dateTasks = tasks[dateKey] || [];\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h2>Welcome to Your Dashboard</h2>\n        <p>Manage tasks for specific dates using the calendar and to-do list.</p>\n      </div>\n      <div className=\"dashboard-content\">\n        {/* Left Column */}\n        <div className=\"dashboard-left\">\n          <section className=\"dashboard-section calendar\">\n            <h3>Your Calendar</h3>\n            <Calendar\n              onChange={handleDateChange}\n              value={selectedDate}\n              className=\"dashboard-calendar\"\n            />\n            <p>\n              Selected Date: <strong>{selectedDate.toDateString()}</strong>\n            </p>\n          </section>\n        </div>\n        {/* Right Column */}\n        <div className=\"dashboard-right\">\n          <section className=\"dashboard-section tasks\">\n            <h3>Tasks for {selectedDate.toDateString()}</h3>\n            <div className=\"task-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Add a new task...\"\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n              />\n              <button onClick={addTask}>Add</button>\n            </div>\n            <ul className=\"task-list\">\n              {dateTasks.map((task, index) => (\n                <li key={index} className={task.completed ? \"completed\" : \"\"}>\n                  <span onClick={() => toggleTaskCompletion(index)}>{task.text}</span>\n                  <button className=\"delete-task\" onClick={() => deleteTask(index)}>\n                    &times;\n                  </button>\n                </li>\n              ))}\n              {dateTasks.length === 0 && <p>No tasks for this date.</p>}\n            </ul>\n          </section>\n        </div>\n      </div>\n      <footer className=\"dashboard-footer\">\n        <p>&copy; 2024 Foodfolio. All rights reserved. Created by Aung Myat & Shreya Sharma.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}